[{"path":"https://buckleybrian.github.io/VBphenoR/articles/VBphenoR.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Variational Bayes for Latent Patient Phenotypes in EHR","text":"previously implemented patient phenotyping latent class model, Buckley et al. (2024) [1], using automatic differentiation variational inference (ADVI) available Stan [2] PyMC3 [3] software . Although approach delivered reasonable results, required significantly complex technical tuning multiple trial--error iterations. find automatic VB methods implemented Stan VB complex configure sensitive model definition algorithm hyperparameters choice gradient optimiser. now propose closed-form approach based theory defined Bishop (2006) [4], Nakajima et al. (2019) [5] review Blei et al. (2017) [6]. implement variational Bayes Gaussian Mixture Model (GMM) algorithm using closed-form coordinate ascent variational inference (CAVI) approach determine phenotype latent class, implement variational Bayes logit regression based Durante & Rigon (2019) [7], determine probability phenotype supplied cohort, shift biomarkers patients phenotype interest versus normal population along sensitivity analysis binary indicator clinical codes medication codes. logit model likelihood uses latent class GMM step inform conditional (see section 2.2 [1]). implementation VBphenoR performs following steps: Run variational Gaussian Mixture Model using EHR-derived patient characteristics discover latent variable \\(D_i\\) indicating phenotype interest \\(^{th}\\) patient. Patient characteristics can patient variables typically found EHR data e.g. Gender Age Ethnicity (disease conditions ethnicity-related increased risk) Physical e.g. BMI Type 2 Diabetes Clinical codes (diagnosis, observations, specialist visits, etc.) Prescription medications related disease condition Biomarkers (usually laboratory tests) Run variational Regression model using latent variable \\(D_i\\) derived step 1 interaction effect determine shift biomarker levels baseline patients phenotype versus without. Appropriately informative priors used set biomarker baseline. Run variational Regression model using latent variable derived step 1 interaction effect determine sensitivity specificity binary indicators clinical codes, medications availability biomarkers (since biomarker laboratory tests include level missingness). following example use Sickle Cell Disease (SCD) data available package find rare phenotype. SCD extremely rare use DBSCAN initialise VB GMM. also use informative prior mixing coefficient stop iterations ELBO starts reverse stop minor (SCD) component reached. \\(\\\\\\)","code":"library(data.table)  # Load the SCD example data supplied with the VBphenoR package data(scd_cohort)  # We will use the SCD biomarkers to discover the SCD latent class X1 <- scd_cohort[,.(CBC,RC)]   # We need to supply DBSCAN hyper-parameters as we will initialise VBphenoR # with DBSCAN. See help(DBSCAN) for details of these parameters. initParams <- c(0.15, 5) names(initParams) <- c('eps','minPts')  # X1 is the data matrix for the VB GMM X1 <- t(X1)   # Set an informative prior for the VB GMM mixing coefficient alpha  # hyper-parameter prior_gmm <- list(   alpha = 0.001 )  # Set informative priors for the beta coefficients of the VB logit prior_logit <- list(mu=c(1,                    mean(scd_cohort$age),                    mean(scd_cohort$highrisk),                    mean(scd_cohort$CBC),                    mean(scd_cohort$RC)),               Sigma=diag(1,5))           # Simplest isotropic case  # X2 is the design matrix for the VB logit X2 <- scd_cohort[,.(age,highrisk,CBC,RC)]  X2[,age:=as.numeric(age)] X2[,highrisk:=as.numeric(highrisk)] X2[,Intercept:=1] setcolorder(X2, c(\"Intercept\",\"age\",\"highrisk\",\"CBC\",\"RC\"))  # Run the patient phenotyping model  # Need to state what columns are the biomarkers biomarkers <- c('CBC', 'RC') set.seed(123)  pheno_result <- run_Model(biomarkers,                         gmm_X=X1, gmm_init=\"dbscan\",                         gmm_initParams=initParams,                         gmm_maxiters=20, gmm_prior=prior_gmm,                         gmm_stopIfELBOReverse=TRUE,                         logit_X=X2, logit_prior=prior_logit )  # S3 print method print(pheno_result)"},{"path":[]},{"path":"https://buckleybrian.github.io/VBphenoR/articles/VBphenoR.html","id":"variational-gaussian-mixture-model","dir":"Articles","previous_headings":"Details","what":"Variational Gaussian Mixture Model","title":"Variational Bayes for Latent Patient Phenotypes in EHR","text":"employ variational Gaussian Mixture Model (GMM) detect latent class patients disease condition based patient characteristics. full derivation GMM can found Bishop (2006) [4]. , explain posterior affected informative priors. derivation Bishop (2006) uses conjugate priors simplify analysis implement conjugacy package. conjugate prior GMM mixing coefficients, \\(\\pi\\), Dirichlet distribution prior hyperparameter \\(\\alpha\\). \\[q(\\bf{\\pi}) = \\textit{Dir}( \\bf{\\pi}|\\alpha)\\] conjugate prior governing unknown mean precision GMM multivariate Gaussian component independent Gaussian-Wishart prior. \\[q(\\bf{\\mu}, \\bf{\\Lambda}) = \\mathbb{N}(\\bf{\\mu}|\\bf{m}, (\\beta\\bf{\\Lambda})^{-1})\\mathbb{W}(\\bf{\\Lambda}|\\bf{W}, \\nu)\\] \\(\\beta\\) governs proportionality precision, \\(\\Lambda\\) \\(W\\) symmetric, positive definite matrix dimensions given number mixture components governs unknown precision GMM multivariate Gaussian component \\(m\\) prior hyperparameter governing mean vector normal part. usually defaulted row means data. different value can used rare cases specific prior clinical evidence cluster means fall specific region away data mean. \\(\\nu\\), degrees freedom, ensures Wishart \\(\\Gamma\\) function well-defined. \\(\\nu\\) must greater \\(D-1\\) (\\(D\\) dimensionality data) ensure distribution proper mean Wishart (\\(\\nu W^{-1}\\)) exists. usually defaulted \\(D+1\\) smallest value ensures Wishart distribution proper expected value precision matrix exists. value also results vague prior. increased desire avoid overly flexible noisy covariance estimates.","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/articles/VBphenoR.html","id":"effect-of-informative-priors","dir":"Articles","previous_headings":"Details > Variational Gaussian Mixture Model","what":"Effect of informative priors","title":"Variational Bayes for Latent Patient Phenotypes in EHR","text":"Informative priors play important role variational model. section briefly outline prior effects VB posterior estimates. full explanation please see [4]. use kmeans “init” option illustration faithful data simple. complex data, Sickle Cell Disease data, disease-positive class extremely unbalanced (0.3%) covered noisy tail negative class, use DBSCAN instead.","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/articles/VBphenoR.html","id":"prior-hyperparameter-alpha-for-the-mixing-dirichlet-distribution-","dir":"Articles","previous_headings":"Details > Variational Gaussian Mixture Model > Effect of informative priors","what":"Prior hyperparameter \\(\\alpha\\) for the mixing Dirichlet distribution.","title":"Variational Bayes for Latent Patient Phenotypes in EHR","text":"prior GMM mixing coefficients, \\(\\pi\\), affects expectation \\(\\alpha \\longrightarrow 0\\), posterior distribution influenced primarily data \\(\\alpha \\longrightarrow \\inf\\) prior increased influence posterior. illustrate Figure 1, use base R faithful data three different values \\(\\alpha\\) (low, medium high) set \\(k=6\\). simplest case, use \\(\\alpha\\) value component. alpha increases, number cluster components clearly approaches desired k. However, lower alpha tends produce intuitive number components data. realistic clinical setting, prior clinical knowledge can used guide selection alpha, allowing us balance number components way provides meaningful clinical insight minimising risk bias introduced setting alpha high. Figure1. Posterior clustering three alpha prior hyperparameter settings. (); low alpha setting, (c); high alpha setting (b); setting low high. use different \\(\\alpha\\) values cluster can fine-tune resulting posterior. Figure 2, illustrate three different settings \\(\\alpha\\) per cluster equal set low (left), equal set high (right) different per cluster component (middle). example set \\(k=4\\). Figure 2. Posterior clustering three different alpha vector prior hyperparameter settings. (); equal alpha vectors, (c); different alpha vectors (b); two equal two different alpha vectors. \\(\\\\\\)","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/articles/VBphenoR.html","id":"prior-hyperparameter-beta-for-pseudo-observations-for-the-gaussian-inverse-wishart-distribution-","dir":"Articles","previous_headings":"Details > Variational Gaussian Mixture Model > Effect of informative priors","what":"Prior hyperparameter \\(\\beta\\) for pseudo-observations for the Gaussian-inverse Wishart distribution.","title":"Variational Bayes for Latent Patient Phenotypes in EHR","text":"\\(\\beta\\) prior significant effect posterior shown Figure 3. , show effect low value \\(\\beta\\) high value \\(\\beta\\). Low values \\(\\beta\\) lead weaker distributions around \\(m\\). case posterior means, \\(\\mu_k\\), driven mainly data assigned cluster. contrary, high \\(\\beta\\) values encode strong belief component means close \\(m\\). Figure 3. Posterior clustering two different beta vector prior hyperparameter settings. (); low beta vectors, (b); high beta vectors. \\(\\\\\\)","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/articles/VBphenoR.html","id":"prior-hyperparameter-w-for-the-scale-matrix-for-the-inverse-wishart-","dir":"Articles","previous_headings":"Details > Variational Gaussian Mixture Model > Effect of informative priors","what":"Prior hyperparameter \\(W\\) for the scale matrix for the inverse Wishart.","title":"Variational Bayes for Latent Patient Phenotypes in EHR","text":"\\(W\\) prior Normal-Wishart posterior also significant effect posterior illustrated Figure 4. Low values \\(W\\) results clusters likely compact. risks overfitting. Higher values \\(W\\) result broad, low-precision Gaussians. risks underfitting. Figure 4. Posterior clustering two different W vector prior hyperparameter settings. (); low W vectors, (b); high W vectors. \\(\\\\\\) following examples used generate Figures 2, 3 4.","code":"# Use Old Faithful data to show the effect of VB GMM Priors,   # stopping on ELBO reverse parameter or delta threshold   # ------------------------------------------------------------------------------    gen_path <- tempdir()   data(\"faithful\")   X <- faithful   P <- ncol(X)    # Run with 4 presumed components for demonstration purposes   k = 4    # ------------------------------------------------------------------------------   # Plotting   # ------------------------------------------------------------------------------    #' Plots the GMM components with centroids   #'   #' @param i List index to place the plot   #' @param gmm_result Results from the VB GMM run   #' @param var_name Variable to hold the GMM hyperparameter name   #' @param grid Grid element used in the plot file name   #' @param fig_path Path to the directory where the plots should be stored   #'   #' @returns   #' @importFrom ggplot2 ggplot   #' @importFrom ggplot2 aes   #' @importFrom ggplot2 geom_point   #' @importFrom ggplot2 scale_color_discrete   #' @importFrom ggplot2 stat_ellipse   #' @export    do_plots <- function(i, gmm_result, var_name, grid, fig_path) {     dd <- as.data.frame(cbind(X, cluster = gmm_result$z_post))     dd$cluster <- as.factor(dd$cluster)      # The group means     # ---------------------------------------------------------------------------     mu <- as.data.frame( t(gmm_result$q_post$m) )      # Plot the posterior mixture groups     # ---------------------------------------------------------------------------     cols <- c(\"#1170AA\", \"#55AD89\", \"#EF6F6A\", \"#D3A333\", \"#5FEFE8\", \"#11F444\")     p <- ggplot2::ggplot() +       ggplot2::geom_point(dd, mapping=ggplot2::aes(x=eruptions, y=waiting, color=cluster)) +       ggplot2::scale_color_discrete(cols, guide = 'none') +       ggplot2::geom_point(mu, mapping=ggplot2::aes(x = eruptions, y = waiting), color=\"black\",                  pch=7, size=2) +       ggplot2::stat_ellipse(dd, geom=\"polygon\",                    mapping=ggplot2::aes(x=eruptions, y=waiting, fill=cluster),                    alpha=0.25)      grids <- paste((grid[,i]), collapse = \"_\")     ggplot2::ggsave(filename=paste0(var_name,\"_\",grids,\".png\"), plot=p, path=fig_path,            width=12, height=12, units=\"cm\", dpi=600, create.dir = TRUE)   }    # ------------------------------------------------------------------------------   # Dirichlet alpha   # ------------------------------------------------------------------------------   alpha_grid <- data.frame(c1=c(1,1,1,1),                            c2=c(1,92,183,183),                            c3=c(183,92,183,183))   init <- \"kmeans\"    for (i in 1:ncol(alpha_grid)) {     prior <- list(       alpha = as.integer(alpha_grid[,i]) # set most of the weight on one component     )      gmm_result <- vb_gmm_cavi(X=X, k=k, prior=prior, delta=1e-8, init=init,                               verbose=FALSE, logDiagnostics=FALSE)     do_plots(i, gmm_result, \"alpha\", alpha_grid, gen_path)   }    # ------------------------------------------------------------------------------   # Normal-Wishart beta for precision proportionality   # ------------------------------------------------------------------------------   beta_grid <- data.frame(c1=c(0.1,0.1,0.1,0.1),                           c2=c(0.9,0.9,0.9,0.9))   init <- \"kmeans\"    for (i in 1:ncol(beta_grid)) {     prior <- list(       beta = as.numeric(beta_grid[,i])     )      gmm_result <- vb_gmm_cavi(X=X, k=k, prior=prior, delta=1e-8, init=init,                               verbose=FALSE, logDiagnostics=FALSE)     do_plots(i, gmm_result, \"beta\", beta_grid, gen_path)   }    # ------------------------------------------------------------------------------   # Normal-Wishart W0 (assuming variance matrix) & logW   # ------------------------------------------------------------------------------    w_grid <- data.frame(w1=c(0.001,0.001),                        w2=c(2.001,2.001))   init <- \"kmeans\"    for (i in 1:nrow(w_grid)) {     w0 = diag(w_grid[,i],P)     prior <- list(       W = w0,       logW = -2*sum(log(diag(chol(w0))))     )      gmm_result <- vb_gmm_cavi(X=X, k=k, prior=prior, delta=1e-8, init=init,                               verbose=FALSE, logDiagnostics=FALSE)     do_plots(i, gmm_result, \"w\", w_grid, gen_path)   }"},{"path":"https://buckleybrian.github.io/VBphenoR/articles/VBphenoR.html","id":"effect-of-initialiser","dir":"Articles","previous_headings":"Details > Variational Gaussian Mixture Model","what":"Effect of initialiser","title":"Variational Bayes for Latent Patient Phenotypes in EHR","text":"VB GMM can initialised using one four methods: kmeans DBSCAN Random assignment kmeans default simple, computationally fast gives reasonable estimates data complex cases complex data, Sickle Cell Disease sample data included package, recommend DBSCAN. Random assignment option rarely useful included completeness. components result require recommend HDBSCAN merge unwanted clusters. \\(\\\\\\)","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/articles/VBphenoR.html","id":"vb-gmm-example-using-kmeans","dir":"Articles","previous_headings":"Details > Variational Gaussian Mixture Model > Effect of initialiser","what":"VB GMM example using kmeans","title":"Variational Bayes for Latent Patient Phenotypes in EHR","text":"Figure 5 illustrates challenges using kmeans initialiser extremely unbalanced data set, e.g. scd_cohort data included package. kmeans good option data overly unbalanced computationally fast. unable cope noisy highly unbalanced cluster classes. Figure 5: Posterior clustering SCD Cohort using kmeans initialiser. k=2 () model distinguish rare SCD cluster majority class. k=3 (b), model starting find SCD cluster still much overlap cluster centroid far true SCD cluster. go way k=10 (c) SCD cluster identified. \\(\\\\\\)","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/articles/VBphenoR.html","id":"vb-gmm-example-using-dbscan","dir":"Articles","previous_headings":"Details > Variational Gaussian Mixture Model > Effect of initialiser","what":"VB GMM example using DBSCAN","title":"Variational Bayes for Latent Patient Phenotypes in EHR","text":"Figure 6 single run using DBSCAN initialiser highly unbalanced noisy scd_cohort data. DBSCAN capable finding rare phenotype class thus provides excellent starting positions VB GMM. cost computational performance. kmeans runs less second, DBSCAN takes 16 seconds data. Another issue DBSCAN limited specified number clusters often returns k clusters k small e.g. k = 2 current phenotyping model. therefore need merge clusters returned DBSCAN passing correct number k cluster centroids VB GMM. Figure 6: Posterior clustering SCD Cohort using DBSCAN initialiser using k=2. SCD cluster found model, albeit misclassified non-SCD observations boundary majority class. Example R code run examples can found manual page vb_gmm_cavi VBphenoR.","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/articles/VBphenoR.html","id":"variational-logit","dir":"Articles","previous_headings":"Details","what":"Variational Logit","title":"Variational Bayes for Latent Patient Phenotypes in EHR","text":"employ variational logit regression classify patients disease condition, given latent class obtained VB GMM. canonical logistic regression, response variable \\(y_i\\) binary likelihood \\(y_i\\) \\[ P(y_i|X_i,\\beta) = \\sigma(X^T_i\\beta)^{y_i} \\cdot  [1 - \\sigma(X^T_i\\beta)]^{1-y_i}\\] : \\(X_i\\) feature vector observation \\(\\), \\(\\beta\\) vector coefficients, \\(\\sigma(z) = \\frac{1}{1 + e^{-z}}\\) logistic .e. sigmoid function.","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/articles/VBphenoR.html","id":"effect-of-informative-priors-1","dir":"Articles","previous_headings":"Details > Variational Logit","what":"Effect of informative priors","title":"Variational Bayes for Latent Patient Phenotypes in EHR","text":"perform Bayesian Inference, specify prior distribution coefficients \\(\\beta\\). common choice multivariate normal prior true posterior: \\[P(\\beta) = \\mathbb{N}(\\beta|m_0, S_0)\\] : \\(m_0\\) prior mean vector assumption true (unknown) mean vector, \\(S_0\\) prior coveriance matrix true (unknown) covariance matrix. variational Inference, prior part Kullback-Leibler divergence [6] approximate posterior \\(Q(\\beta)\\) true posterior \\(P(\\beta)\\): \\[KL(Q(\\beta) || P(\\beta))\\] : \\[Q(\\beta) = \\mathbb{N}(\\beta|m,S)\\] , \\(m\\) best-fit approximate mean vector, \\(S\\) best-fit approximate covariance matrix effect used optimising variational parameters maximising Evidence Lower Bound (ELBO) [6], lower bound log marginal likelihood: \\[ELBO = \\mathbb{E}_{Q(\\beta)}[log P(y|X,\\beta)] - KL(Q(\\beta)||P(\\beta))\\] use uninformative priors \\(m_0\\) \\(S_0\\), reduce model essentially maximum likelihood given data. clinical settings, usually expert medical opinion empirical evidence can used set informative priors. approach can enhance clinical value posterior results overcome limitations EHR data, missing biomarker data high levels imbalance response. \\(\\\\\\)\\(\\\\\\)","code":""},{"path":[]},{"path":"https://buckleybrian.github.io/VBphenoR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Brian Buckley. Author, maintainer, copyright holder. Adrian O'Hagan. Author.            Co-author Marie Galligan. Author.            Co-author","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Buckley B, O'Hagan , Galligan M (2025). VBphenoR: Variational Bayes Latent Patient Phenotypes EHR. R package version 1.0.0, https://buckleybrian.github.io/VBphenoR/, https://github.com/buckleybrian/VBphenoR.","code":"@Manual{,   title = {VBphenoR: Variational Bayes for Latent Patient Phenotypes in EHR},   author = {Brian Buckley and Adrian O'Hagan and Marie Galligan},   year = {2025},   note = {R package version 1.0.0, https://buckleybrian.github.io/VBphenoR/},   url = {https://github.com/buckleybrian/VBphenoR}, }"},{"path":"https://buckleybrian.github.io/VBphenoR/index.html","id":"vbphenor","dir":"","previous_headings":"","what":"Variational Bayes for Latent Patient Phenotypes in EHR","title":"Variational Bayes for Latent Patient Phenotypes in EHR","text":"Variational Bayes Latent Patient Phenotypes Electronic Health Records (EHR)","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Variational Bayes for Latent Patient Phenotypes in EHR","text":"VBphenoR R package discovering latent patient phenotypes realistically large EHR data using Bayesian statistics. order computationally support EHR data, employ variational Bayes (VB). Currently, supports latent class discovery using VB Gaussian Mixture Model implemented Coordinate-ascent Variational Inference (CAVI) VB Logistic Regression biomarker levels shifted latent phenotype. Please note package still development.","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Variational Bayes for Latent Patient Phenotypes in EHR","text":"Prior analyzing EHR data, R package needs installed. easiest way install VBphenoR CRAN: VBphenoR can also downloaded installed via GitHub. useful downloading specific version package (can found https://github.com/buckleybrian/VBphenoR/releases): latest developmental version package can downloaded installed running: successful installation, package must loaded working space:","code":"install.packages(\"VBphenoR\") devtools::install_github(\"buckleybrian/VBphenoR@vx.xx.x\")  # or   devtools::install_version(\"VBphenoR\", version = \"x.x.x\", repos = \"http://cran.us.r-project.org\") devtools::install_github(\"buckleybrian/VBphenoR\", build_vignettes = TRUE, build_manual=TRUE) library(VBphenoR)"},{"path":"https://buckleybrian.github.io/VBphenoR/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Variational Bayes for Latent Patient Phenotypes in EHR","text":"See vignette usage instructions example.","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Variational Bayes for Latent Patient Phenotypes in EHR","text":"VBphenoR available open source MIT License","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/reference/logit_CAVI.html","id":null,"dir":"Reference","previous_headings":"","what":"Variational inference for Bayesian logistic regression using CAVI algorithm — logit_CAVI","title":"Variational inference for Bayesian logistic regression using CAVI algorithm — logit_CAVI","text":"Variational inference Bayesian logistic regression using CAVI algorithm","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/reference/logit_CAVI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variational inference for Bayesian logistic regression using CAVI algorithm — logit_CAVI","text":"","code":"logit_CAVI(   X,   y,   prior,   delta = 1e-16,   maxiters = 10000,   verbose = FALSE,   progressbar = TRUE )"},{"path":"https://buckleybrian.github.io/VBphenoR/reference/logit_CAVI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variational inference for Bayesian logistic regression using CAVI algorithm — logit_CAVI","text":"X input design matrix. Note intercept column vector assumed included. y binary response. prior Prior logistic parameters. delta ELBO difference tolerance conversion. maxiters maximum iterations run convergence achieved. verbose diagnostics flag (default). progressbar visual progress bar indicate iterations (default).","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/reference/logit_CAVI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variational inference for Bayesian logistic regression using CAVI algorithm — logit_CAVI","text":"list containing: error - error message convergence failed number iterations achieve convergence. mu - vector posterior means. Sigma - vector posterior variances. Convergence - vector ELBO iteration. LBDifference - vector ELBO differences iteration. xi - vector log-odds per X row.","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/reference/logit_CAVI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Variational inference for Bayesian logistic regression using CAVI algorithm — logit_CAVI","text":"","code":"# \\donttest{    # Use Old Faithful data to show the effect of VB GMM Priors,   # stopping on ELBO reverse parameter or delta threshold   # ------------------------------------------------------------------------------    gen_path <- tempdir()   data(\"faithful\")   X <- faithful   P <- ncol(X)    # Run with 4 presumed components for demonstration purposes   k = 4    # ------------------------------------------------------------------------------   # Plotting   # ------------------------------------------------------------------------------    #' Plots the GMM components with centroids   #'   #' @param i List index to place the plot   #' @param gmm_result Results from the VB GMM run   #' @param var_name Variable to hold the GMM hyperparameter name   #' @param grid Grid element used in the plot file name   #' @param fig_path Path to the directory where the plots should be stored   #'   #' @returns   #' @importFrom ggplot2 ggplot   #' @importFrom ggplot2 aes   #' @importFrom ggplot2 geom_point   #' @importFrom ggplot2 scale_color_discrete   #' @importFrom ggplot2 stat_ellipse   #' @export    do_plots <- function(i, gmm_result, var_name, grid, fig_path) {     dd <- as.data.frame(cbind(X, cluster = gmm_result$z_post))     dd$cluster <- as.factor(dd$cluster)      # The group means     # ---------------------------------------------------------------------------     mu <- as.data.frame( t(gmm_result$q_post$m) )      # Plot the posterior mixture groups     # ---------------------------------------------------------------------------     cols <- c(\"#1170AA\", \"#55AD89\", \"#EF6F6A\", \"#D3A333\", \"#5FEFE8\", \"#11F444\")     p <- ggplot2::ggplot() +       ggplot2::geom_point(dd, mapping=ggplot2::aes(x=eruptions, y=waiting, color=cluster)) +       ggplot2::scale_color_discrete(cols, guide = 'none') +       ggplot2::geom_point(mu, mapping=ggplot2::aes(x = eruptions, y = waiting), color=\"black\",                  pch=7, size=2) +       ggplot2::stat_ellipse(dd, geom=\"polygon\",                    mapping=ggplot2::aes(x=eruptions, y=waiting, fill=cluster),                    alpha=0.25)      grids <- paste((grid[,i]), collapse = \"_\")     ggplot2::ggsave(filename=paste0(var_name,\"_\",grids,\".png\"), plot=p, path=fig_path,            width=12, height=12, units=\"cm\", dpi=600, create.dir = TRUE)   }    # ------------------------------------------------------------------------------   # Dirichlet alpha   # ------------------------------------------------------------------------------   alpha_grid <- data.frame(c1=c(1,1,1,1),                            c2=c(1,92,183,183),                            c3=c(183,92,183,183))   init <- \"kmeans\"    for (i in 1:ncol(alpha_grid)) {     prior <- list(       alpha = as.integer(alpha_grid[,i]) # set most of the weight on one component     )      gmm_result <- vb_gmm_cavi(X=X, k=k, prior=prior, delta=1e-8, init=init,                               verbose=FALSE, logDiagnostics=FALSE)     do_plots(i, gmm_result, \"alpha\", alpha_grid, gen_path)   } #>    |                                                                               |                                                                      |   0%   |                                                                               |                                                                      |   1%   |                                                                               |=                                                                     |   1%   |                                                                               |=                                                                     |   2%   |                                                                               |==                                                                    |   2%   |                                                                               |==                                                                    |   3% #>    |                                                                               |                                                                      |   0%   |                                                                               |                                                                      |   1%   |                                                                               |=                                                                     |   1%   |                                                                               |=                                                                     |   2% #>    |                                                                               |                                                                      |   0%   |                                                                               |                                                                      |   1%   |                                                                               |=                                                                     |   1%   |                                                                               |=                                                                     |   2%   |                                                                               |==                                                                    |   2%    # ------------------------------------------------------------------------------   # Normal-Wishart beta for precision proportionality   # ------------------------------------------------------------------------------   beta_grid <- data.frame(c1=c(0.1,0.1,0.1,0.1),                           c2=c(0.9,0.9,0.9,0.9))   init <- \"kmeans\"    for (i in 1:ncol(beta_grid)) {     prior <- list(       beta = as.numeric(beta_grid[,i])     )      gmm_result <- vb_gmm_cavi(X=X, k=k, prior=prior, delta=1e-8, init=init,                               verbose=FALSE, logDiagnostics=FALSE)     do_plots(i, gmm_result, \"beta\", beta_grid, gen_path)   } #>    |                                                                               |                                                                      |   0%   |                                                                               |                                                                      |   1%   |                                                                               |=                                                                     |   1%   |                                                                               |=                                                                     |   2%   |                                                                               |==                                                                    |   2%   |                                                                               |==                                                                    |   3%   |                                                                               |==                                                                    |   4%   |                                                                               |===                                                                   |   4%   |                                                                               |===                                                                   |   5%   |                                                                               |====                                                                  |   5%   |                                                                               |====                                                                  |   6%   |                                                                               |=====                                                                 |   6%   |                                                                               |=====                                                                 |   7%   |                                                                               |=====                                                                 |   8%   |                                                                               |======                                                                |   8%   |                                                                               |======                                                                |   9%   |                                                                               |=======                                                               |   9%   |                                                                               |=======                                                               |  10%   |                                                                               |=======                                                               |  11%   |                                                                               |========                                                              |  11%   |                                                                               |========                                                              |  12%   |                                                                               |=========                                                             |  12%   |                                                                               |=========                                                             |  13%   |                                                                               |=========                                                             |  14%   |                                                                               |==========                                                            |  14%   |                                                                               |==========                                                            |  15% #>    |                                                                               |                                                                      |   0%   |                                                                               |                                                                      |   1%   |                                                                               |=                                                                     |   1%   |                                                                               |=                                                                     |   2%   |                                                                               |==                                                                    |   2%   |                                                                               |==                                                                    |   3%    # ------------------------------------------------------------------------------   # Normal-Wishart W0 (assuming variance matrix) & logW   # ------------------------------------------------------------------------------    w_grid <- data.frame(w1=c(0.001,0.001),                        w2=c(2.001,2.001))   init <- \"kmeans\"    for (i in 1:nrow(w_grid)) {     w0 = diag(w_grid[,i],P)     prior <- list(       W = w0,       logW = -2*sum(log(diag(chol(w0))))     )      gmm_result <- vb_gmm_cavi(X=X, k=k, prior=prior, delta=1e-8, init=init,                               verbose=FALSE, logDiagnostics=FALSE)     do_plots(i, gmm_result, \"w\", w_grid, gen_path)   } #>    |                                                                               |                                                                      |   0%   |                                                                               |                                                                      |   1%   |                                                                               |=                                                                     |   1%   |                                                                               |=                                                                     |   2%   |                                                                               |==                                                                    |   2%   |                                                                               |==                                                                    |   3%   |                                                                               |==                                                                    |   4%   |                                                                               |===                                                                   |   4%   |                                                                               |===                                                                   |   5%   |                                                                               |====                                                                  |   5%   |                                                                               |====                                                                  |   6%   |                                                                               |=====                                                                 |   6%   |                                                                               |=====                                                                 |   7%   |                                                                               |=====                                                                 |   8%   |                                                                               |======                                                                |   8%   |                                                                               |======                                                                |   9%   |                                                                               |=======                                                               |   9%   |                                                                               |=======                                                               |  10%   |                                                                               |=======                                                               |  11%   |                                                                               |========                                                              |  11%   |                                                                               |========                                                              |  12%   |                                                                               |=========                                                             |  12%   |                                                                               |=========                                                             |  13%   |                                                                               |=========                                                             |  14%   |                                                                               |==========                                                            |  14%   |                                                                               |==========                                                            |  15% #>    |                                                                               |                                                                      |   0%   |                                                                               |                                                                      |   1%   |                                                                               |=                                                                     |   1%   |                                                                               |=                                                                     |   2% # }"},{"path":"https://buckleybrian.github.io/VBphenoR/reference/run_Model.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the Variational Bayes patient phenotyping model — run_Model","title":"Run the Variational Bayes patient phenotyping model — run_Model","text":"Run Variational Bayes patient phenotyping model","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/reference/run_Model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the Variational Bayes patient phenotyping model — run_Model","text":"","code":"run_Model(   biomarkers,   gmm_X,   logit_X,   gmm_delta = 1e-06,   logit_delta = 1e-16,   gmm_maxiters = 200,   logit_maxiters = 10000,   gmm_init = \"kmeans\",   gmm_initParams = NULL,   gmm_prior = NULL,   logit_prior = NULL,   gmm_stopIfELBOReverse = FALSE,   gmm_verbose = FALSE,   logit_verbose = FALSE,   gmm_progressbar = FALSE,   logit_progressbar = FALSE )"},{"path":"https://buckleybrian.github.io/VBphenoR/reference/run_Model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the Variational Bayes patient phenotyping model — run_Model","text":"biomarkers EHR variables biomarkers. vector data column names corresponding biomarker variables. gmm_X n x p data matrix (data frame converted matrix). logit_X input design matrix. Note intercept column vector assumed included. gmm_delta Change ELBO triggers algorithm stopping. logit_delta Change ELBO triggers algorithm stopping. gmm_maxiters maximum iterations VB GMM. logit_maxiters maximum iterations VB logit. gmm_init Initialize clusters c(\"random\", \"kmeans\", \"dbscan\"). gmm_initParams Parameters initialiser requiring parameters e.g. dbscan requires 'eps' 'minPts'. gmm_prior informative prior GMM. logit_prior informative prior logit. gmm_stopIfELBOReverse Stop VB iterations ELBO reverses direction (TRUE FALSE). gmm_verbose Print information per iteration track progress case long-running experiments. logit_verbose Print information per iteration track progress case long-running experiments. gmm_progressbar Show progressbar driven GMM variational iterations. logit_progressbar Show progressbar driven logit variational iterations.","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/reference/run_Model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the Variational Bayes patient phenotyping model — run_Model","text":"list containing: prevalence - mean probability latent phenotype given data priors. biomarker_shift - data frame containing biomarker shifts normal phenotype. gmm - VB GMM results. details see help(vb_gmm_cavi). logit - VB Logit results.  details see help(logit_CAVI).","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/reference/run_Model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the Variational Bayes patient phenotyping model — run_Model","text":"","code":"# \\donttest{ ##Example 1: Use the internal Sickle Cell Disease data to find the rare ##           phenotype.  SCD is extremely rare so we use DBSCAN to initialise ##           the VB GMM. We also use an informative prior for the mixing ##           coefficient and stop iterations when the ELBO starts to reverse ##           so that we stop when the minor (SCD) component is reached.  library(data.table)  # Load the SCD example data supplied with the VBphenoR package data(scd_cohort)  # We will use the SCD biomarkers to discover the SCD latent class. # X1 is the data matrix for the VB GMM. X1 <- scd_cohort[,.(CBC,RC)]  # We need to supply DBSCAN hyper-parameters as we will initialise VBphenoR # with DBSCAN. See help(DBSCAN) for details of these parameters. initParams <- c(0.15, 5) names(initParams) <- c('eps','minPts')  # Set an informative prior for the VB GMM mixing coefficient alpha # hyper-parameter prior_gmm <- list(   alpha = 0.001 )  # Set informative priors for the beta coefficients of the VB logit prior_logit <- list(mu=c(1,                    mean(scd_cohort$age),                    mean(scd_cohort$highrisk),                    mean(scd_cohort$CBC),                    mean(scd_cohort$RC)),               Sigma=diag(1,5))           # Simplest isotropic case  # X2 is the design matrix for the VB logit X2 <- scd_cohort[,.(age,highrisk,CBC,RC)] X2[,age:=as.numeric(age)] #>          age highrisk      CBC        RC #>        <num>   <lgcl>    <num>     <num> #>     1:     3     TRUE  9.25100 2.5290000 #>     2:    84     TRUE  8.04900 2.5210000 #>     3:     7     TRUE  8.93400 2.3990000 #>     4:    33     TRUE  9.44500 2.3580000 #>     5:    43    FALSE  8.79200 2.4070000 #>    ---                                   #> 63250:    18     TRUE 13.92457 0.5225167 #> 63251:    56     TRUE 13.38314 0.7163306 #> 63252:    87     TRUE 12.81786 0.6605872 #> 63253:    63     TRUE 12.41853 0.8727518 #> 63254:    11     TRUE 12.79134 1.0333188 X2[,highrisk:=as.numeric(highrisk)] #>          age highrisk      CBC        RC #>        <num>    <num>    <num>     <num> #>     1:     3        1  9.25100 2.5290000 #>     2:    84        1  8.04900 2.5210000 #>     3:     7        1  8.93400 2.3990000 #>     4:    33        1  9.44500 2.3580000 #>     5:    43        0  8.79200 2.4070000 #>    ---                                   #> 63250:    18        1 13.92457 0.5225167 #> 63251:    56        1 13.38314 0.7163306 #> 63252:    87        1 12.81786 0.6605872 #> 63253:    63        1 12.41853 0.8727518 #> 63254:    11        1 12.79134 1.0333188 X2[,Intercept:=1] #>          age highrisk      CBC        RC Intercept #>        <num>    <num>    <num>     <num>     <num> #>     1:     3        1  9.25100 2.5290000         1 #>     2:    84        1  8.04900 2.5210000         1 #>     3:     7        1  8.93400 2.3990000         1 #>     4:    33        1  9.44500 2.3580000         1 #>     5:    43        0  8.79200 2.4070000         1 #>    ---                                             #> 63250:    18        1 13.92457 0.5225167         1 #> 63251:    56        1 13.38314 0.7163306         1 #> 63252:    87        1 12.81786 0.6605872         1 #> 63253:    63        1 12.41853 0.8727518         1 #> 63254:    11        1 12.79134 1.0333188         1 setcolorder(X2, c(\"Intercept\",\"age\",\"highrisk\",\"CBC\",\"RC\"))  # Run the patient phenotyping model  # Need to state what columns are the biomarkers biomarkers <- c('CBC', 'RC') set.seed(123)  pheno_result <- run_Model(biomarkers,                         gmm_X=X1, gmm_init=\"dbscan\",                         gmm_initParams=initParams,                         gmm_maxiters=20, gmm_prior=prior_gmm,                         gmm_stopIfELBOReverse=TRUE,                         logit_X=X2, logit_prior=prior_logit )  # S3 print method print(pheno_result) #> VBphenoR phenotyping results. #> ----------------------------- #>  #> EHR data with 63,254 rows #>  #> Prevalence = 0.312% in these data #> Biomarker shift for patients with the phenotype of interest: #>  biomarker shift #>        CBC  6.25 #>         RC  4.18 # }"},{"path":"https://buckleybrian.github.io/VBphenoR/reference/scd_cohort.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthetic Sickle Cell Anaemia data — scd_cohort","title":"Synthetic Sickle Cell Anaemia data — scd_cohort","text":"data transformed version SCD data paper Al-Dhamari et al. Synthetic datasets open software development rare disease research. Orphanet J Rare Dis 19, 265 (2024).retained subset data columns relevant model transformed data representative cohort retaining expected prevalence SCD (0.3%), rest converted non-SCD patients distributing biomarker values around healthy value. columns described .","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/reference/scd_cohort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synthetic Sickle Cell Anaemia data — scd_cohort","text":"","code":"scd_cohort"},{"path":[]},{"path":"https://buckleybrian.github.io/VBphenoR/reference/scd_cohort.html","id":"scd-cohort","dir":"Reference","previous_headings":"","what":"scd_cohort","title":"Synthetic Sickle Cell Anaemia data — scd_cohort","text":"data frame 100,403 rows 9 columns: age Patient Age sex Patient gender assuming Male Female genders race Patient race.  One \"Others\", \"African-American\", \"European-American\" birthDate Patient birth date diagDate Patient diagnosis date CBC Complete Blood Count biomarker test g/dL RC Reticulocytes Count biomarker test % Reticulocytes highrisk Flag high risk ethnicity SCD Flag indicating SCD observations test model performance","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/reference/scd_cohort.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Synthetic Sickle Cell Anaemia data — scd_cohort","text":"Al-Dhamari (2024) doi:10.1186/s13023-024-03254-2.","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/reference/VBphenoR.html","id":null,"dir":"Reference","previous_headings":"","what":"The VBphenoR package — VBphenoR-package","title":"The VBphenoR package — VBphenoR-package","text":"VBphenoR library R package variational Bayes approach clinical patient phenotyping using EHR data.","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/reference/VBphenoR.html","id":"introduction","dir":"Reference","previous_headings":"","what":"Introduction","title":"The VBphenoR package — VBphenoR-package","text":"main goal VBphenoR package provide comprehensive variational Bayes approach clinical patient phenotyping using Electronic Health Records (EHR) data.  phenotyping model adapted Hubbard et al (2019). motivation using variational Bayes rather gold-standard Monte Carlo Bayes approach computational performance.  Monte Carlo unable cope many EHR clinical studies due number observations variables. explain detail paper, Buckley et al. (2024).","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/reference/VBphenoR.html","id":"vb-phenotype-algorithm","dir":"Reference","previous_headings":"","what":"VB Phenotype algorithm","title":"The VBphenoR package — VBphenoR-package","text":"implementation VBphenoR performs following steps: Run variational Gaussian Mixture Model using EHR-derived patient characteristics discover latent variable \\(D_i\\) indicating phenotype interest \\(\\)th patient. Patient characteristics can patient variables typically found EHR data e.g. Gender Age Ethnicity (disease conditions ethnicity-related increased risk) Physical e.g. BMI Type 2 Diabetes Clinical codes (diagnosis, observations, specialist visits, etc.) Prescription medications related disease condition Biomarkers (usually laboratory tests) Run variational Regression model using latent variable \\(D_i\\) derived step 1 interaction effect determine shift biomarker levels baseline patients phenotype versus without. Appropriately informative priors used set biomarker baseline. Run variational Regression model using latent variable \\(D_i\\) derived step 1 interaction effect determine sensitivity specificity binary indicators clinical codes, medications availability biomarkers (since biomarker laboratory tests include level missingness). details model can found package vignette.","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/reference/VBphenoR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The VBphenoR package — VBphenoR-package","text":"Hubbard RA, Huang J, Harton J, Oganisian , Choi G, Utidjian L, et al. Bayesian latent class approach EHR-based phenotyping. StatMed. (2019) 38:74–87. doi:10.1002/sim.7953 Buckley, Brian, Adrian O'Hagan, Marie Galligan. Variational Bayes latent class analysis EHR-based phenotyping large real-world data. Frontiers Applied Mathematics Statistics 10 (2024): 1302825. doi:10.3389/fams.2024.1302825","code":""},{"path":[]},{"path":"https://buckleybrian.github.io/VBphenoR/reference/VBphenoR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The VBphenoR package — VBphenoR-package","text":"Maintainer: Brian Buckley brian.buckley.1@ucdconnect.ie (ORCID) [copyright holder] Authors: Adrian O'Hagan adrian.ohagan@ucd.ie (Co-author) Marie Galligan marie.galligan@ucd.ie (Co-author)","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/reference/vb_gmm_cavi.html","id":null,"dir":"Reference","previous_headings":"","what":"Main algorithm function for the VB CAVI GMM — vb_gmm_cavi","title":"Main algorithm function for the VB CAVI GMM — vb_gmm_cavi","text":"Main algorithm function VB CAVI GMM","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/reference/vb_gmm_cavi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main algorithm function for the VB CAVI GMM — vb_gmm_cavi","text":"","code":"vb_gmm_cavi(   X,   k,   prior = NULL,   delta = 1e-06,   maxiters = 5000,   init = \"kmeans\",   initParams = NULL,   stopIfELBOReverse = FALSE,   verbose = FALSE,   logDiagnostics = FALSE,   logFilename = \"vb_gmm_log.txt\",   progressbar = TRUE )"},{"path":"https://buckleybrian.github.io/VBphenoR/reference/vb_gmm_cavi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main algorithm function for the VB CAVI GMM — vb_gmm_cavi","text":"X n x p data matrix (data frame converted matrix). k guess number mixture components. prior Prior GMM parameters. delta change ELBO triggers algorithm stopping. maxiters maximum iterations run delta stop algorithm already. init initialize clusters c(\"random\", \"kmeans\", \"dbscan\"). initParams initialization parameters dbscan.  NULL dbscan selected init. stopIfELBOReverse stop run ELBO iteration t detected reversed iteration t-1. verbose print information per iteration track progress case long-running experiments. logDiagnostics log detailed diagnostics.  TRUE, diagnostics RDS file created using path specified logFilename. logFilename filename diagnostics log. progressbar visual progress bar indicate iterations (default).","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/reference/vb_gmm_cavi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main algorithm function for the VB CAVI GMM — vb_gmm_cavi","text":"list containing: error - error message convergence failed number iterations achieve convergence. z_post - vector posterior cluster mappings. q_post - list fitted posterior Q family. q_post includes: alpha - Dirichlet prior mixing coefficient beta - proportionality precision Normal-Wishart prior m - mean vector Normal part Normal-Wishart prior v - degrees freedom Wishart gamma ensuring well defined U - W hyperparameter Wishart conjugate prior precision mixtures. k sets D x D symmetric, positive definite matrices. logW - logW term used calculate expectation mixture component precision. vector k. R - responsibilities. n x k matrix. logR - log responsibilities. n x k matrix. elbo - vector ELBO iteration. elbo_d - vector ELBO differences iteration.","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/reference/vb_gmm_cavi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Main algorithm function for the VB CAVI GMM — vb_gmm_cavi","text":"","code":"# \\donttest{    # Use Old Faithful data to show the effect of VB GMM Priors,   # stopping on ELBO reverse parameter or delta threshold   # ------------------------------------------------------------------------------    gen_path <- tempdir()   data(\"faithful\")   X <- faithful   P <- ncol(X)    # Run with 4 presumed components for demonstration purposes   k = 4    # ------------------------------------------------------------------------------   # Plotting   # ------------------------------------------------------------------------------    #' Plots the GMM components with centroids   #'   #' @param i List index to place the plot   #' @param gmm_result Results from the VB GMM run   #' @param var_name Variable to hold the GMM hyperparameter name   #' @param grid Grid element used in the plot file name   #' @param fig_path Path to the directory where the plots should be stored   #'   #' @returns   #' @importFrom ggplot2 ggplot   #' @importFrom ggplot2 aes   #' @importFrom ggplot2 geom_point   #' @importFrom ggplot2 scale_color_discrete   #' @importFrom ggplot2 stat_ellipse   #' @export    do_plots <- function(i, gmm_result, var_name, grid, fig_path) {     dd <- as.data.frame(cbind(X, cluster = gmm_result$z_post))     dd$cluster <- as.factor(dd$cluster)      # The group means     # ---------------------------------------------------------------------------     mu <- as.data.frame( t(gmm_result$q_post$m) )      # Plot the posterior mixture groups     # ---------------------------------------------------------------------------     cols <- c(\"#1170AA\", \"#55AD89\", \"#EF6F6A\", \"#D3A333\", \"#5FEFE8\", \"#11F444\")     p <- ggplot2::ggplot() +       ggplot2::geom_point(dd, mapping=ggplot2::aes(x=eruptions, y=waiting, color=cluster)) +       ggplot2::scale_color_discrete(cols, guide = 'none') +       ggplot2::geom_point(mu, mapping=ggplot2::aes(x = eruptions, y = waiting), color=\"black\",                  pch=7, size=2) +       ggplot2::stat_ellipse(dd, geom=\"polygon\",                    mapping=ggplot2::aes(x=eruptions, y=waiting, fill=cluster),                    alpha=0.25)      grids <- paste((grid[,i]), collapse = \"_\")     ggplot2::ggsave(filename=paste0(var_name,\"_\",grids,\".png\"), plot=p, path=fig_path,            width=12, height=12, units=\"cm\", dpi=600, create.dir = TRUE)   }    # ------------------------------------------------------------------------------   # Dirichlet alpha   # ------------------------------------------------------------------------------   alpha_grid <- data.frame(c1=c(1,1,1,1),                            c2=c(1,92,183,183),                            c3=c(183,92,183,183))   init <- \"kmeans\"    for (i in 1:ncol(alpha_grid)) {     prior <- list(       alpha = as.integer(alpha_grid[,i]) # set most of the weight on one component     )      gmm_result <- vb_gmm_cavi(X=X, k=k, prior=prior, delta=1e-8, init=init,                               verbose=FALSE, logDiagnostics=FALSE)     do_plots(i, gmm_result, \"alpha\", alpha_grid, gen_path)   } #>    |                                                                               |                                                                      |   0%   |                                                                               |                                                                      |   1%   |                                                                               |=                                                                     |   1%   |                                                                               |=                                                                     |   2%   |                                                                               |==                                                                    |   2%   |                                                                               |==                                                                    |   3% #>    |                                                                               |                                                                      |   0%   |                                                                               |                                                                      |   1%   |                                                                               |=                                                                     |   1%   |                                                                               |=                                                                     |   2% #>    |                                                                               |                                                                      |   0%   |                                                                               |                                                                      |   1%   |                                                                               |=                                                                     |   1%   |                                                                               |=                                                                     |   2%    # ------------------------------------------------------------------------------   # Normal-Wishart beta for precision proportionality   # ------------------------------------------------------------------------------   beta_grid <- data.frame(c1=c(0.1,0.1,0.1,0.1),                           c2=c(0.9,0.9,0.9,0.9))   init <- \"kmeans\"    for (i in 1:ncol(beta_grid)) {     prior <- list(       beta = as.numeric(beta_grid[,i])     )      gmm_result <- vb_gmm_cavi(X=X, k=k, prior=prior, delta=1e-8, init=init,                               verbose=FALSE, logDiagnostics=FALSE)     do_plots(i, gmm_result, \"beta\", beta_grid, gen_path)   } #>    |                                                                               |                                                                      |   0%   |                                                                               |                                                                      |   1%   |                                                                               |=                                                                     |   1%   |                                                                               |=                                                                     |   2%   |                                                                               |==                                                                    |   2%   |                                                                               |==                                                                    |   3%   |                                                                               |==                                                                    |   4%   |                                                                               |===                                                                   |   4%   |                                                                               |===                                                                   |   5%   |                                                                               |====                                                                  |   5%   |                                                                               |====                                                                  |   6%   |                                                                               |=====                                                                 |   6%   |                                                                               |=====                                                                 |   7%   |                                                                               |=====                                                                 |   8%   |                                                                               |======                                                                |   8%   |                                                                               |======                                                                |   9%   |                                                                               |=======                                                               |   9%   |                                                                               |=======                                                               |  10%   |                                                                               |=======                                                               |  11%   |                                                                               |========                                                              |  11%   |                                                                               |========                                                              |  12%   |                                                                               |=========                                                             |  12%   |                                                                               |=========                                                             |  13%   |                                                                               |=========                                                             |  14%   |                                                                               |==========                                                            |  14%   |                                                                               |==========                                                            |  15% #>    |                                                                               |                                                                      |   0%   |                                                                               |                                                                      |   1%   |                                                                               |=                                                                     |   1%   |                                                                               |=                                                                     |   2%   |                                                                               |==                                                                    |   2%   |                                                                               |==                                                                    |   3%    # ------------------------------------------------------------------------------   # Normal-Wishart W0 (assuming variance matrix) & logW   # ------------------------------------------------------------------------------    w_grid <- data.frame(w1=c(0.001,0.001),                        w2=c(2.001,2.001))   init <- \"kmeans\"    for (i in 1:nrow(w_grid)) {     w0 = diag(w_grid[,i],P)     prior <- list(       W = w0,       logW = -2*sum(log(diag(chol(w0))))     )      gmm_result <- vb_gmm_cavi(X=X, k=k, prior=prior, delta=1e-8, init=init,                               verbose=FALSE, logDiagnostics=FALSE)     do_plots(i, gmm_result, \"w\", w_grid, gen_path)   } #>    |                                                                               |                                                                      |   0%   |                                                                               |                                                                      |   1%   |                                                                               |=                                                                     |   1%   |                                                                               |=                                                                     |   2%   |                                                                               |==                                                                    |   2%   |                                                                               |==                                                                    |   3%   |                                                                               |==                                                                    |   4%   |                                                                               |===                                                                   |   4%   |                                                                               |===                                                                   |   5%   |                                                                               |====                                                                  |   5%   |                                                                               |====                                                                  |   6%   |                                                                               |=====                                                                 |   6%   |                                                                               |=====                                                                 |   7%   |                                                                               |=====                                                                 |   8%   |                                                                               |======                                                                |   8%   |                                                                               |======                                                                |   9%   |                                                                               |=======                                                               |   9%   |                                                                               |=======                                                               |  10%   |                                                                               |=======                                                               |  11%   |                                                                               |========                                                              |  11%   |                                                                               |========                                                              |  12%   |                                                                               |=========                                                             |  12%   |                                                                               |=========                                                             |  13%   |                                                                               |=========                                                             |  14%   |                                                                               |==========                                                            |  14%   |                                                                               |==========                                                            |  15% #>    |                                                                               |                                                                      |   0%   |                                                                               |                                                                      |   1%   |                                                                               |=                                                                     |   1%   |                                                                               |=                                                                     |   2% # }"},{"path":"https://buckleybrian.github.io/VBphenoR/reference/VB_GMM_ELBO.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Evidence Lower Bound (ELBO) — VB_GMM_ELBO","title":"Calculate the Evidence Lower Bound (ELBO) — VB_GMM_ELBO","text":"Calculate Evidence Lower Bound (ELBO)","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/reference/VB_GMM_ELBO.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Evidence Lower Bound (ELBO) — VB_GMM_ELBO","text":"","code":"VB_GMM_ELBO(X, p, n, q_post, prior)"},{"path":"https://buckleybrian.github.io/VBphenoR/reference/VB_GMM_ELBO.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Evidence Lower Bound (ELBO) — VB_GMM_ELBO","text":"X n x p data matrix (data frame converted matrix). p number parameters n number rows q_post list fitted posterior Q family iteration t. prior Prior GMM parameters.","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/reference/VB_GMM_ELBO.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Evidence Lower Bound (ELBO) — VB_GMM_ELBO","text":"elbo Evidence Lower Bound iteration t following E M steps.","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/reference/VB_GMM_Expectation.html","id":null,"dir":"Reference","previous_headings":"","what":"Variational Bayes Expectation step — VB_GMM_Expectation","title":"Variational Bayes Expectation step — VB_GMM_Expectation","text":"Variational Bayes Expectation step","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/reference/VB_GMM_Expectation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variational Bayes Expectation step — VB_GMM_Expectation","text":"","code":"VB_GMM_Expectation(X, n, q_post)"},{"path":"https://buckleybrian.github.io/VBphenoR/reference/VB_GMM_Expectation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variational Bayes Expectation step — VB_GMM_Expectation","text":"X n x p data matrix (data frame converted matrix). n number rows X. q_post list fitted posterior Q family iteration t-1.","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/reference/VB_GMM_Expectation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variational Bayes Expectation step — VB_GMM_Expectation","text":"list fitted posterior Q family E step iteration t.","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/reference/VB_GMM_Init.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialise the variational parameters and the hyper parameters — VB_GMM_Init","title":"Initialise the variational parameters and the hyper parameters — VB_GMM_Init","text":"Initialise variational parameters hyper parameters","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/reference/VB_GMM_Init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialise the variational parameters and the hyper parameters — VB_GMM_Init","text":"","code":"VB_GMM_Init(X, k, n, prior, init, initParams)"},{"path":"https://buckleybrian.github.io/VBphenoR/reference/VB_GMM_Init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialise the variational parameters and the hyper parameters — VB_GMM_Init","text":"X n x p data matrix (data frame converted matrix). k guess number mixture components. n number rows X. prior Prior GMM parameters. init initialize clusters c(\"random\", \"kmeans\", \"dbscan\") initParams initialization parameters dbscan.  NULL dbscan selected init.","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/reference/VB_GMM_Init.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialise the variational parameters and the hyper parameters — VB_GMM_Init","text":"list initially fitted posterior Q family","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/reference/VB_GMM_Maximisation.html","id":null,"dir":"Reference","previous_headings":"","what":"Variational Bayes Maximisation step — VB_GMM_Maximisation","title":"Variational Bayes Maximisation step — VB_GMM_Maximisation","text":"Variational Bayes Maximisation step","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/reference/VB_GMM_Maximisation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variational Bayes Maximisation step — VB_GMM_Maximisation","text":"","code":"VB_GMM_Maximisation(X, q_post, prior)"},{"path":"https://buckleybrian.github.io/VBphenoR/reference/VB_GMM_Maximisation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variational Bayes Maximisation step — VB_GMM_Maximisation","text":"X n x p data matrix (data frame converted matrix). q_post list fitted posterior Q family iteration t-1. prior Prior GMM parameters.","code":""},{"path":"https://buckleybrian.github.io/VBphenoR/reference/VB_GMM_Maximisation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variational Bayes Maximisation step — VB_GMM_Maximisation","text":"list fitted posterior Q family M step iteration t.","code":""},{"path":[]},{"path":"https://buckleybrian.github.io/VBphenoR/news/index.html","id":"vbphenor-10-2025-08","dir":"Changelog","previous_headings":"","what":"VBphenoR 1.0 (2025-08)","title":"VBphenoR 1.0 (2025-08)","text":"Initial CRAN submission.","code":""}]

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vb_pheno.R
\name{runModel}
\alias{runModel}
\title{Run the Variational Bayes patient Phenotyping model}
\usage{
runModel(
  ehr_data,
  biomarkers,
  gmm_X,
  gmm_k,
  gmm_delta = 1e-06,
  gmm_init = "kmeans",
  gmm_initParams = NULL,
  gmm_maxiters = 200,
  gmm_prior = NULL,
  gmm_stopIfELBOReverse = FALSE,
  gmm_verbose = FALSE,
  logit_X,
  logit_prior,
  logit_tol = 1e-16,
  logit_maxiter = 10000,
  logit_verbose = FALSE
)
}
\arguments{
\item{ehr_data}{The EHR data.}

\item{biomarkers}{The EHR variables that are biomarkers. This is a vector of data column names corresponding to the biomarker variables.}

\item{gmm_X}{The input design matrix. Note the intercept column vector is assumed included.}

\item{gmm_k}{The maximum guess for how many disease components exist.  Minimum is 2 (binary response).}

\item{gmm_delta}{Change in ELBO that triggers algorithm stopping.}

\item{gmm_init}{Initialize the clusters c("random", "kmeans", proportion R{ > 0 and < 1}).}

\item{gmm_initParams}{Parameters for an initialiser requiring its own parameters e.g. dbscan.}

\item{gmm_maxiters}{The maximum iterations for VB GMM.}

\item{gmm_prior}{An informative prior for the GMM}

\item{gmm_stopIfELBOReverse}{Stop the VB iterations if the ELBO reverses direction.}

\item{gmm_verbose}{Print out information per iteration to track progress in case of long-running experiments.}

\item{logit_X}{The input design matrix. Note the intercept column vector is assumed included.}

\item{logit_prior}{An informative prior for the logit}

\item{logit_tol}{Change in ELBO that triggers algorithm stopping.}

\item{logit_maxiter}{The maximum iterations for VB logit.}

\item{logit_verbose}{Print out information per iteration to track progress in case of long-running experiments.}
}
\value{
A list containing:
\itemize{
\item prevalence - The mean probability of latent phenotype given the data and priors.
\item biomarker_shift - A data frame containing the biomarker shifts from normal for the phenotype.
\item gmm - The VB GMM results. For details see help(vb_gmm_cavi).
\item logit - The VB Logit results.  For details see help(logit_CAVI).
}
}
\description{
Run the Variational Bayes patient Phenotyping model
}
\examples{
\dontrun{
##Example 1: Use the internal Sickle Cell Disease data to find the rare
##           phenotype.  SCD is extremely rare so we use DBSCAN to initialise
##           the VB GMM. We also use an informative prior for the mixing
##           coefficient and stop iterations when the ELBO starts to reverse
##           so that we stop when the minor (SCD) component is reached.

library(data.table)

# Load the SCD example data supplied with the VBphenoR package
data(scd_cohort)

# We will use the SCD biomarkers to discover the SCD latent class.
# X1 is the data matrix for the VB GMM.
X1 <- scd_cohort[,.(CBC,RC)]

# We need to supply DBSCAN hyper-parameters as we will initialise VBphenoR
# with DBSCAN. See help(DBSCAN) for details of these parameters.
initParams <- c(0.15, 5)
names(initParams) <- c('eps','minPts')

# Set an informative prior for the VB GMM mixing coefficient alpha
# hyper-parameter
prior_gmm <- list(
  alpha = 0.001
)

# Set informative priors for the beta coefficients of the VB logit
prior_logit <- list(mu=c(1,
                   mean(scd_cohort$age),
                   mean(scd_cohort$highrisk),
                   mean(scd_cohort$CBC),
                   mean(scd_cohort$RC)),
              Sigma=diag(1,5))           # Simplest isotropic case

# X2 is the design matrix for the VB logit
X2 <- scd_cohort[,.(age,highrisk,CBC,RC)]
X2[,age:=as.numeric(age)]
X2[,highrisk:=as.numeric(highrisk)]
X2[,Intercept:=1]
setcolorder(X2, c("Intercept","age","highrisk","CBC","RC"))

# Run the patient phenotyping model

# Need to state what columns are the biomarkers
biomarkers <- c('CBC', 'RC')
set.seed(123)
pheno_result <- runModel(scd_cohort, biomarkers,
                        gmm_X=X1, gmm_k=k, gmm_init="dbscan",
                        gmm_initParams=initParams,
                        gmm_maxiters=20, gmm_prior=prior_gmm,
                        gmm_stopIfELBOReverse=TRUE,
                        logit_X=X2, logit_prior=prior_logit
)

# Biomarker shifts for phenotype of interest
pheno_result$biomarker_shift
}

}
